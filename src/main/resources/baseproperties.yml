application:
    name: ${APP_NAME:my}-${POD_NAMESPACE:app}
    version: ${AURORA_VERSION:local-dev}
spring:
    application:
      name: ${APP_NAME:my}-${POD_NAMESPACE:app}
    flyway:
       out-of-order: true
    jmx:
        enabled: false
    sleuth:
        log:
           slf4j:
                whitelisted-mdc-keys: User-Agent
        propagation-keys: User-Agent
    cloud:
        discovery:
            client:
                composite-indicator:
                    enabled: false

management:
    server:
        port: ${MANAGEMENT_HTTP_PORT:8081}
    endpoints:
        web:
            exposure:
                include: info,health,prometheus,env,loggers
    endpoint:
        health:
            status:
                order: DOWN, OUT_OF_SERVICE, FATAL, UNKNOWN, OBSERVE, UP
                http-mapping:
                    DOWN: 503
                    OUT_OF_SERVICE: 503
                    FATAL: 500
                    UNKNOWN: 500
                    OBSERVE: 200
                    UP: 200
            show-details: always
            show-component: always
        prometheus:
            enabled: true

    metrics:
        distribution:
            percentiles-histogram:
                http: true
            maximum-expected-value:
                http: 2s
                operations: 2s
            minimum-expected-value:
                http: 10ms
                operations: 10ms
info:
    serviceLinks:
        metrics: "{metricsHostname}/d/MssPVVpik/openshift-java-resource-usage?var-ds=openshift-{cluster}-ose&var-affiliation={affiliation}&var-project={namespace}&var-app={name}&var-instance=All"
    podLinks:
        metrics: "{metricsHostname}/d/MssPVVpik/openshift-java-resource-usage?var-ds=openshift-{cluster}-ose&var-affiliation={affiliation}&var-project={namespace}&var-app={name}&var-instance={podName}"
    auroraVersion: ${AURORA_VERSION:local-dev}
    imageBuildTime: ${IMAGE_BUILD_TIME:}
